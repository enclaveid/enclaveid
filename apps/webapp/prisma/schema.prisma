generator kysely {
  provider     = "prisma-kysely"
  output       = "../src/app/services/db"
  fileName     = "kyselyTypes.ts"
  enumFileName = "kyselyEnums.ts"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    String  @id
  email String  @unique
  name  String?

  apiKey String @unique @default(dbgenerated("encode(sha256(random()::text::bytea), 'hex')")) @db.Char(64)

  createdAt DateTime @default(now())
  updatedAt DateTime

  userClaims UserClaim[]
}

model WhitelistedEmail {
  id    String @id
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime
}

enum NodeType {
  observable
  inferrable
  speculative
}

model UserClaim {
  id String @id

  label          String
  description    String
  nodeType       NodeType
  conversationId String
  frequency      Int

  createdAt DateTime @default(now())
  updatedAt DateTime

  claimCategory   ClaimCategory @relation(fields: [claimCategoryId], references: [id])
  claimCategoryId String

  user   User   @relation(fields: [userId], references: [id])
  userId String
}

model ClaimCategory {
  id String @id

  name         String
  clusterLabel Int
  isPersonal   Boolean

  userClaims UserClaim[]

  createdAt DateTime @default(now())
  updatedAt DateTime
}
