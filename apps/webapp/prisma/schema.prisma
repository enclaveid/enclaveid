generator client {
  provider        = "prisma-client-js"
  // One for local dev, one for nodejs docker
  binaryTargets   = ["native", "debian-openssl-3.0.x"]
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [vector]
}

model User {
  id    String  @id @default(cuid())
  email String  @unique
  name  String?

  apiKeys          ApiKey[]
  phoneNumbers     PhoneNumber[]
  causalGraphNodes CausalGraphNode[] @relation("CausalGraphNodeToUser")

  // Auth.js fields
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PhoneNumber {
  id String @id @default(cuid())

  phoneNumber      String    @unique
  verificationCode String?
  verifiedAt       DateTime?

  rawDataChunks RawDataChunk[] @relation("PhoneNumberToRawDataChunk")

  user   User   @relation(fields: [userId], references: [id])
  userId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ApiKey {
  id String @id @default(cuid())

  key String @unique @default(dbgenerated("encode(sha256(random()::text::bytea), 'hex')")) @db.Char(64)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
}

model WhitelistedEmail {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// -------------------- Query service models --------------------
model CausalGraphNode {
  id String @id @default(cuid())

  nodeLabel   String                       @unique
  proposition String
  frequency   Int                          @default(1)
  edges       String[]
  datetimes   DateTime[]
  sentiment   Float
  embedding   Unsupported("vector(2000)")? // Need to keep optional bc of prisma bullshit...

  rawDataChunks       RawDataChunk[] @relation("CausalGraphNodeToRawDataChunk")
  propositionSubjects User[]         @relation("CausalGraphNodeToUser")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RawDataChunk {
  id String @id @default(cuid())

  chunkNumber  Int                          @unique
  fromDatetime DateTime
  toDatetime   DateTime
  sentiment    Float
  rawData      String
  embedding    Unsupported("vector(2000)")? // Need to keep optional bc of prisma bullshit...

  causalGraphNodes CausalGraphNode[] @relation("CausalGraphNodeToRawDataChunk")
  phoneNumbers     PhoneNumber[]     @relation("PhoneNumberToRawDataChunk")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// -------------------- Auth.js models --------------------
model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}
