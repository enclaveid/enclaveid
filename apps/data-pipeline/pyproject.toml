[tool.coverage.run]
branch = true
source = ["data_pipeline"]

[tool.coverage.report]
exclude_lines = ['if TYPE_CHECKING:']
show_missing = true

[tool.pytest.ini_options]
addopts = "--cov --cov-report html:'../../coverage/apps/data-pipeline/html' --cov-report xml:'../../coverage/apps/data-pipeline/coverage.xml' --html='../../reports/apps/data-pipeline/unittests/html/index.html' --junitxml='../../reports/apps/data-pipeline/unittests/junit.xml'"

[tool.poetry]
name = "data-pipeline"
version = "1.0.0"
description = "Automatically generated by Nx."
authors = []
license = 'Proprietary'
readme = 'README.md'

[[tool.poetry.packages]]
include = "data_pipeline"

[tool.poetry.dependencies]
python = "3.12.7"
dagster = "^1.9.4"
polars = "^1.17.1"
dagster-polars = "^0.25.4"
dagster-cloud = "^1.9.4"
faiss-cpu = "^1.9.0.post1"
networkx = "^3.4.2"
json-repair = "^0.30.3"
universal-pathlib = "^0.2.5"
azure-storage-blob = "^12.24.0"
adlfs = "^2024.7.0"
igraph = "^0.11.8"
scikit-learn = "^1.6.0"
pandas = "^2.2.3"
plotext = "^5.3.2"
lxml = "^5.3.0"                 # for networkx graphml serialization
umap-learn = "^0.5.7"           # careful with these
numpy = "^2.0.2"                # careful with these
llvmlite = "^0.43.0"            # careful with these
numba = "^0.60.0"               # careful with these
openai = "^1.60.0"
wandb = "^0.19.4"
toolz = "^1.0.0"
psycopg = "^3.2.4"
joblib = "^1.4.2"

[tool.poetry.group.dev.dependencies]
autopep8 = "2.0.2"
ruff = "0.1.5"
pytest = "7.3.1"
pytest-sugar = "0.9.7"
pytest-cov = "4.1.0"
pytest-html = "3.2.0"
dagster-webserver = "^1.9.4"
python-dotenv = "^1.0.1"
# For local embedder
torch = "2.5.0"
transformers = "4.47.1"
sentence-transformers = "3.3.1"
hf-transfer = "0.1.8"
einops = "0.8.0"
datasets = "3.2.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.dagster]
module_name = "data_pipeline"


[tool.ruff]
exclude = [".ruff_cache", ".svn", ".tox", ".venv", "dist"]

line-length = 88
indent-width = 4

[tool.ruff.lint]
select = [
  # pycodestyle
  "E",
  # Pyflakes
  "F",
  # pyupgrade
  "UP",
  # flake8-bugbear
  "B",
  # flake8-simplify
  "SIM",
  # isort
  "I",
]
ignore = ["E501"]

fixable = ["ALL"]
unfixable = []
