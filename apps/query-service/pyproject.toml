[tool.coverage.run]
branch = true
source = ["query_service"]

[tool.coverage.report]
exclude_lines = ['if TYPE_CHECKING:']
show_missing = true

[tool.pytest.ini_options]
addopts = "--cov --cov-report html:'../../coverage/apps/query-service/html' --cov-report xml:'../../coverage/apps/query-service/coverage.xml' --html='../../reports/apps/query-service/unittests/html/index.html' --junitxml='../../reports/apps/query-service/unittests/junit.xml'"

[tool.poetry]
name = "query-service"
version = "1.0.0"
description = "Automatically generated by Nx."
authors = []
license = 'Proprietary'
readme = 'README.md'

[[tool.poetry.packages]]
include = "query_service"

[tool.poetry.dependencies]
python = "3.12.7"
azure-storage-blob = "^12.24.0"
faiss-cpu = "^1.9.0.post1"
polars = "^1.17.1"
fastapi = "^0.115.6"
pydantic = "^2.10.5"
uvicorn = "^0.34.0"
psycopg = "^3.2.3"
numpy = "^2.0.2"
psycopg-pool = "^3.2.3"
pgvector = "^0.3.6"

[tool.poetry.group.dev.dependencies]
autopep8 = "^2.3.2"
ruff = "^0.9.5"
pytest = "7.3.1"
pytest-sugar = "0.9.7"
pytest-cov = "4.1.0"
pytest-html = "3.2.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
exclude = [".ruff_cache", ".svn", ".tox", ".venv", "dist"]

line-length = 88
indent-width = 4

[tool.ruff.lint]
select = [
  # pycodestyle
  "E",
  # Pyflakes
  "F",
  # pyupgrade
  "UP",
  # flake8-bugbear
  "B",
  # flake8-simplify
  "SIM",
  # isort
  "I",
]
ignore = []

fixable = ["ALL"]
unfixable = []
